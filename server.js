const express = require("express");
const fs = require("fs");
const cors = require("cors");

const app = express();
app.use(express.json());
app.use(cors());

const usersFile = "users.json";

// –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function getUsers() {
    if (!fs.existsSync(usersFile)) return {};
    return JSON.parse(fs.readFileSync(usersFile, "utf8"));
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function saveUsers(users) {
    fs.writeFileSync(usersFile, JSON.stringify(users, null, 2));
}

// –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.post("/get-balance", (req, res) => {
    const { userId } = req.body;
    let users = getUsers();
    
    if (!users[userId]) {
        users[userId] = { balance: 1000 }; // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å 1000 –∫–æ–∏–Ω–æ–≤
        saveUsers(users);
    }

    res.json({ balance: users[userId].balance });
});

// –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–µ–π—Å
app.post("/open-case", (req, res) => {
    const { userId } = req.body;
    let users = getUsers();

    if (!users[userId]) {
        users[userId] = { balance: 1000 };
    }

    if (users[userId].balance < 100) {
        return res.status(400).json({ error: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤!" });
    }

    // –°–ø–∏—Å—ã–≤–∞–µ–º 100 –∫–æ–∏–Ω–æ–≤ –∑–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ
    users[userId].balance -= 100;

    // –®–∞–Ω—Å—ã –≤—ã–ø–∞–¥–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    const items = [
        { name: "–ù–æ–∂ üî™", chance: 1 },
        { name: "–ü–µ—Ä—á–∞—Ç–∫–∏ üß§", chance: 5 },
        { name: "–†–µ–¥–∫–∏–π —Å–∫–∏–Ω ‚ú®", chance: 15 },
        { name: "–û–±—ã—á–Ω—ã–π —Å–∫–∏–Ω üé≠", chance: 30 },
        { name: "–ü—É—Å—Ç–æ ‚ùå", chance: 49 }
    ];

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—ã–ø–∞–¥–µ–Ω–∏–µ
    let rand = Math.random() * 100;
    let drop = "–ü—É—Å—Ç–æ ‚ùå";
    
    for (let item of items) {
        if (rand < item.chance) {
            drop = item.name;
            break;
        }
        rand -= item.chance;
    }

    saveUsers(users);
    res.json({ drop, balance: users[userId].balance });
});

app.listen(3000, () => console.log("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"));
